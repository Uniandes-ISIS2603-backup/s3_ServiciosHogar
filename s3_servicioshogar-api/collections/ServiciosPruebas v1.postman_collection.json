{
	"info": {
		"_postman_id": "ceebbd51-46e9-4a75-934d-4ebbe95a322a",
		"name": "ServiciosPruebas v1",
		"description": "Pruebas de servicios v1. No se probara ningun tipo de relacion ya que no se han realizado. Se realizaran pruebas basica como obtener todos los objetos, obtener un objeto especifico, modifica un objeto especifico y eliminar un objeto especifico para finalmente verificar que todo haya sido realizado correctamente.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Obtener las servicios",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "aa7e1da8-4eb8-446a-8a06-a6d37331d9d2",
						"type": "text/javascript",
						"exec": [
							"var data= JSON.parse(responseBody);",
							"tests[\"No genera error en el Get all\"] = responseCode.code === 200;",
							"tests[\"servicios count\"] = data.length >= 0;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\":\"Carlos\",\n\t\"direccion\":\"AK\",\n\t\"correo\":\"carlos\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_servicioshogar-api/api/clientes/7/solicitudes/31/servicios",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_servicioshogar-api",
						"api",
						"clientes",
						"7",
						"solicitudes",
						"31",
						"servicios"
					]
				},
				"description": "Se realiza un request en el cual si no existen objetos devolvera un array vacio. En caso contrario mandara un json con los objetos presentes en el BD."
			},
			"response": []
		},
		{
			"name": "Crear un servicio #1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "90d70bf1-1315-49ac-8a44-4903fdec0cfc",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_p\",data.id);",
							"tests[\"no genera error en el Post\"] = responseCode.code === 200;",
							"",
							"pm.test(\"valores\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.descripcion).to.eql(\"descripcionEjemplo #1\");",
							"    pm.expect(jsonData.requerimientos).to.eql(\"requeriemientoEjemplo #1\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"descripcion\": \"descripcionEjemplo #1\",\n\t\"requerimientos\": \"requeriemientoEjemplo #1\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_servicioshogar-api/api/clientes/7/solicitudes/31/servicios",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_servicioshogar-api",
						"api",
						"clientes",
						"7",
						"solicitudes",
						"31",
						"servicios"
					]
				},
				"description": "Se crea un servicio enviando un json con la informacion del servicio. "
			},
			"response": []
		},
		{
			"name": "Crear un servicio #2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5cce45fa-0add-4a4c-b04f-77e837207962",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_p2\",data.id);",
							"tests[\"no genera error en el Post\"] = responseCode.code === 200;",
							"",
							"pm.test(\"valores\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.descripcion).to.eql(\"descripcionEjemplo #2\");",
							"    pm.expect(jsonData.requerimientos).to.eql(\"requeriemientoEjemplo #2\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"descripcion\": \"descripcionEjemplo #2\",\n\t\"requerimientos\": \"requeriemientoEjemplo #2\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_servicioshogar-api/api/clientes/7/solicitudes/31/servicios",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_servicioshogar-api",
						"api",
						"clientes",
						"7",
						"solicitudes",
						"31",
						"servicios"
					]
				},
				"description": "Se crea un servicio enviando un json con la informacion del servicio."
			},
			"response": []
		},
		{
			"name": "Crear una servicio#3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1bec36ff-0723-4a37-96ad-43a37a535eb7",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_p3\",data.id);",
							"tests[\"no genera error en el Post\"] = responseCode.code === 200;",
							"",
							"pm.test(\"valores\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.descripcion).to.eql(\"descripcionEjemplo #3\");",
							"    pm.expect(jsonData.requerimientos).to.eql(\"requeriemientoEjemplo #3\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"descripcion\": \"descripcionEjemplo #3\",\n\t\"requerimientos\": \"requeriemientoEjemplo #3\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_servicioshogar-api/api/clientes/7/solicitudes/31/servicios",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_servicioshogar-api",
						"api",
						"clientes",
						"7",
						"solicitudes",
						"31",
						"servicios"
					]
				},
				"description": "Se crea un servicio enviando un json con la informacion del servicio."
			},
			"response": []
		},
		{
			"name": "Obtener solicitud #1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e799d11e-4806-4bcc-85d8-169fc6a41389",
						"type": "text/javascript",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Get\"] = responseCode.code === 200;",
							"",
							"pm.test(\"valores\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.descripcion).to.eql(\"descripcionEjemplo #1\");",
							"    pm.expect(jsonData.requerimientos).to.eql(\"requeriemientoEjemplo #1\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\":\"Ejemplo #2\",\n\t\"direccion\":\"Direccion Ej #2\",\n\t\"correo\":\"ejemplo2@hotmail.com\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_servicioshogar-api/api/clientes/7/solicitudes/31/servicios/31",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_servicioshogar-api",
						"api",
						"clientes",
						"7",
						"solicitudes",
						"31",
						"servicios",
						"31"
					]
				},
				"description": "Verificacion de que la solicitud haya sido guardado exitosamente y su id haya sido asignado automaticamente por la BD."
			},
			"response": []
		},
		{
			"name": "Obtener solicitud #2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ff2b616e-f2f5-4f6e-b82e-9a51ae338f2e",
						"type": "text/javascript",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Get\"] = responseCode.code === 200;",
							"",
							"pm.test(\"valores\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.descripcion).to.eql(\"descripcionEjemplo #2\");",
							"    pm.expect(jsonData.requerimientos).to.eql(\"requeriemientoEjemplo #2\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\":\"Ejemplo #2\",\n\t\"direccion\":\"Direccion Ej #2\",\n\t\"correo\":\"ejemplo2@hotmail.com\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_servicioshogar-api/api/clientes/7/solicitudes/31/servicios/32",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_servicioshogar-api",
						"api",
						"clientes",
						"7",
						"solicitudes",
						"31",
						"servicios",
						"32"
					]
				},
				"description": "Verificacion de que la solicitud haya sido guardado exitosamente y su id haya sido asignado automaticamente por la BD."
			},
			"response": []
		},
		{
			"name": "Obtener servicio #3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dabc10a3-5d57-486f-9148-b778a4ef71f6",
						"type": "text/javascript",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Get\"] = responseCode.code === 200;",
							"",
							"pm.test(\"valores\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.descripcion).to.eql(\"descripcionEjemplo #3\");",
							"    pm.expect(jsonData.requerimientos).to.eql(\"requeriemientoEjemplo #3\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\":\"Ejemplo #2\",\n\t\"direccion\":\"Direccion Ej #2\",\n\t\"correo\":\"ejemplo2@hotmail.com\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_servicioshogar-api/api/clientes/7/solicitudes/31/servicios/33",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_servicioshogar-api",
						"api",
						"clientes",
						"7",
						"solicitudes",
						"31",
						"servicios",
						"33"
					]
				},
				"description": "Verificacion de que el servicio haya sido guardado exitosamente y su id haya sido asignado automaticamente por la BD."
			},
			"response": []
		},
		{
			"name": "Obtener solicitud #4",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "67f70614-9e5e-4914-a0f1-f817b5f64b51",
						"type": "text/javascript",
						"exec": [
							"tests[\"No consulta con id que no existe\"] = responseCode.code === 404; ",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /solicitudes/31/servicios/0 no existe.\");"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\":\"Ejemplo #2\",\n\t\"direccion\":\"Direccion Ej #2\",\n\t\"correo\":\"ejemplo2@hotmail.com\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_servicioshogar-api/api/clientes/7/solicitudes/31/servicios/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_servicioshogar-api",
						"api",
						"clientes",
						"7",
						"solicitudes",
						"31",
						"servicios",
						"0"
					]
				},
				"description": "Debido a que no se creo solicitud #4, la app deberia devolver un mensaje informando que esa soliciyud no se creo."
			},
			"response": []
		},
		{
			"name": "Verificacion todas los servicios fueron creadas",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5f7a1bab-638c-4de1-9cd0-4811c7db5012",
						"type": "text/javascript",
						"exec": [
							"var data= JSON.parse(responseBody);",
							"tests[\"No genera error en el Get all\"] = responseCode.code === 200;",
							"tests[\"servicios count\"] = data.length >= 0;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\":\"Ejemplo #2\",\n\t\"direccion\":\"Direccion Ej #2\",\n\t\"correo\":\"ejemplo2@hotmail.com\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_servicioshogar-api/api/clientes/7/solicitudes/31/servicios",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_servicioshogar-api",
						"api",
						"clientes",
						"7",
						"solicitudes",
						"31",
						"servicios"
					]
				},
				"description": "Se obtiene un json con todas los servicios creados anteriormente para verificar que todo se haya realizado correctamente."
			},
			"response": []
		},
		{
			"name": "Modificar servicio #3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "34df01d3-cd4c-439d-a814-9925b257ef8a",
						"type": "text/javascript",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Put\"] = responseCode.code === 200;",
							"",
							"pm.test(\"valores\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.descripcion).to.eql(\"descripcionEjemplo #4\");",
							"    pm.expect(jsonData.requerimientos).to.eql(\"requeriemientoEjemplo #4\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"descripcion\": \"descripcionEjemplo #4\",\n\t\"requerimientos\": \"requeriemientoEjemplo #4\",\n\t\"calificacion\": \"4\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_servicioshogar-api/api/clientes/7/solicitudes/31/servicios/33",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_servicioshogar-api",
						"api",
						"clientes",
						"7",
						"solicitudes",
						"31",
						"servicios",
						"33"
					]
				},
				"description": "Se modifica el servicio #3 de tal forma que podamos confirmar que el cambio se puede realizar"
			},
			"response": []
		},
		{
			"name": "Verificacion servicio #3 fue modificado",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3efff25a-bde1-4793-b8e0-801d43c55aea",
						"type": "text/javascript",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Get\"] = responseCode.code === 200;",
							"",
							"pm.test(\"valores\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.descripcion).to.eql(\"descripcionEjemplo #4\");",
							"    pm.expect(jsonData.requerimientos).to.eql(\"requeriemientoEjemplo #4\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\":\"Ejemplo #2\",\n\t\"direccion\":\"Direccion Ej #2\",\n\t\"correo\":\"ejemplo2@hotmail.com\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_servicioshogar-api/api/clientes/7/solicitudes/31/servicios/33",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_servicioshogar-api",
						"api",
						"clientes",
						"7",
						"solicitudes",
						"31",
						"servicios",
						"33"
					]
				},
				"description": "Llamamos al objeto en la BD para verificar doblemente que el servicio haya sido modificado"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "aa22370a-d444-45cd-97f1-3973a4129996",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "210e8fc9-7e28-4fc5-947d-0a30efbb91dd",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}